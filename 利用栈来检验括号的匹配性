#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SIZE 100

// 使用数组实现栈
char stack[MAX_SIZE];
int top = -1;

// 判断两种括号是否匹配
int ArePair(char opening, char closing){
    if(opening == '(' && closing == ')') return 1;
    else if(opening == '{' && closing == '}') return 1;
    else if(opening == '[' && closing == ']') return 1;
    return 0;
}

// 检查括号是否平衡
int AreParanthesesBalanced(char *exp) {

    char *ptr = exp;
    while(*ptr != '\0') {
        if(*ptr == '(' || *ptr == '{' || *ptr == '[') {
            // 入栈
            if(top >= MAX_SIZE-1) {
                printf("Stack overflow!\n");
                return 0;
            }
            stack[++top] = *ptr;
        }
        else if(*ptr == ')' || *ptr == '}' || *ptr == ']') {
            // 出栈
            if(top < 0 || !ArePair(stack[top], *ptr)) {
                return 0;
            }
            else {
                top--;
            }
        }
        ptr++;
    }

    return top == -1;
}

int main() {

    char expression[100];

    printf("Enter an expression: ");
    scanf("%s", expression);

    if(AreParanthesesBalanced(expression)) {
        printf("Balanced\n");
    }
    else {
        printf("Not Balanced\n");
    }

    return 0;
}
